#!/bin/bash


# disk manager
# 2016 by Robert Degen

# dependencies: dialog pv


DL=/tmp/disklist
DL_DEVS=/tmp/disklist.devices
DL_INFOS=/tmp/disklist.infos
DL_MODELS=/tmp/disklist.models

fdisk -l | grep "^Disk /" | tr -d ':' | sed -E "s/^Disk //g">$DL

cat $DL | cut -f 1 -d ' ' | sed -E 's/(.*)/\1 /g' >$DL_DEVS
cat $DL | cut -f 2- -d ' ' | tr ',' '_' | tr ' ' '_' >$DL_INFOS


cat /dev/null >$DL_MODELS
for D in $(cat $DL_DEVS); do
    fdisk -l $D | grep -i "^disk model" | cut -d ':' -f 2- | tr ' ' '_' | sed -E 's/_*$//g' >>$DL_MODELS
done

DLOPT=$(paste -d '' $DL_DEVS $DL_INFOS $DL_MODELS)


exec 3>&1
X=$(dialog --menu "Disk to work on:" 0 0 0 $DLOPT 2>&1 1>&3)
Y=$?
exec 3>&-

if [[ ! $Y = 0 ]]; then
    echo "Aborted"
    exit 1
fi

TARGET_DISK=$X

exec 3>&1
X=$(dialog --menu "Main menu" 0 0 0 disk-empty-2G "Clearing disks beginning 2G..." copy-to-disk "Copy image file to disk" ubuntu-ssh-provision "copy 'root.pub' to disk and enable ssh in /boot" 2>&1 1>&3)
Y=$?
exec 3>&-

if [[ $Y = 0 ]]; then
    echo "ok choice is $X"

    if [[ $X = ubuntu-ssh-provision ]]; then
	if [[ ! -f root.pub ]]; then
	    echo -n "root.pub missing, press RETURN to continue"
	    read
	    exit 0
	else
	    if [[ -f m ]]; then
		echo -n "ERR: file 'm' is in the way for my mount point, press RETURN to continue"
		read
		exit 1
	    fi
	    if [[ -d m ]]; then
		echo -n "ERR: directory 'm' is in the way for my mount point, press RETURN to continue"
		read
		exit 1
	    fi
	    set -x
	    mkdir m

	    mount ${TARGET_DISK}1 m
	    touch m/ssh
	    umount m

	    mount ${TARGET_DISK}2 m
	    mkdir -p m/root/.ssh
	    chmod og-rwx m/root/.ssh
	    cat root.pub >m/root/.ssh/authorized_keys
	    umount m

	    ls -al m
	    set +x
	    echo -n "Done, press RETURN to continue (and clean up ad hoc mountpoint 'm')"
	    read
	    rm -fr m
	    sync
	    exit 0
	fi
    fi

    if [[ $X = disk-empty-2G ]]; then
	echo -n "Press RETURN to: kill the first 2G of $TARGET_DISK - or CTRL-C to abort"
	read
	set -x
	dd if=/dev/zero of=$TARGET_DISK bs=1M count=2000 status=progress
	set +x
	echo -n "Done, press RETURN to continue"
	exit 0
    fi

    if [[ $X = copy-to-disk ]]; then
	IMGFILES=$(ls *.img 2>/dev/null)
	if [[ -z $IMGFILES ]]; then
	    echo "Sorry, no *.img files in CWD" 1>&2
	    exit 0
	else
	    IMGFILESOPT=""
	    for I in $IMGFILES; do
		IMGFILESOPT="$IMGFILESOPT $I $I"
	    done

	    exec 3>&1
	    IMG=$(dialog --menu "Disk to work on:" 0 0 0 $IMGFILESOPT 2>&1 1>&3)
	    Y=$?
	    exec 3>&-

	    if [[ $Y = 0 ]]; then
		echo -n "Really? RETURN to continue: $IMG -> $TARGET_DISK"
		read
		set -x
		pv $IMG | dd of=$TARGET_DISK bs=32M oflag=sync
		set +x
		echo -n "Done, press RETURN to continue"
		read
		exit 0
	    else
		echo "Aborted"
		exit 1
	    fi
	    
	    exit 0
	fi
    fi

else
    echo aborted
fi




exit 0
exec 3>&1
X=$(dialog --menu "Question" 0 0 0 value1 decsription1 value2 description2 2>&1 1>&3)
Y=$?
exec 3>&-
